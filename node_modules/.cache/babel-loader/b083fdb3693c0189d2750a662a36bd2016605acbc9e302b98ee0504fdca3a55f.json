{"ast":null,"code":"var _jsxFileName = \"C:\\\\_Code\\\\fjmk\\\\reactquiz\\\\react-quiz-hatespeech-milionaire-theme\\\\src\\\\components\\\\Quiz.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Quiz = ({\n  questions,\n  questionNumber,\n  setQuestionNumber,\n  setTimeOut,\n  handleBecomeMillionaire,\n  quizStarted,\n  setQuizStarted,\n  setShowExplanationModal,\n  // Bestehende Prop\n  setExplanation,\n  // Neue Prop\n  answersLocked,\n  // Receive from props\n  setAnswersLocked // Receive from props\n}) => {\n  _s();\n  const [question, setQuestion] = useState(null);\n  const [selectedAnswer, setSelectedAnswer] = useState(null);\n\n  // Update the current question when the question number changes\n  useEffect(() => {\n    setQuestion(questions[questionNumber - 1]);\n    setSelectedAnswer(null); // Reset selected answer when question changes\n  }, [questions, questionNumber]);\n\n  // Call handleBecomeMillionaire function when becoming a millionaire\n  useEffect(() => {\n    if (questionNumber > 15) {\n      handleBecomeMillionaire();\n    }\n  }, [questionNumber, handleBecomeMillionaire]);\n\n  // Handles the click for answers\n  const handleClick = item => {\n    if (!answersLocked) {\n      setSelectedAnswer(item);\n    } else {\n      console.log(\"Answers are locked!\");\n    }\n  };\n\n  // Handles the \"Lock In Answer\" button click\n  const handleLockIn = () => {\n    if (!selectedAnswer) {\n      alert(\"Sie kÃ¶nnen keine Antwort sperren, wenn sie nicht ausgewÃ¤hlt ist!\");\n      return;\n    }\n    if (!answersLocked) {\n      setAnswersLocked(true); // Use the setter from props\n\n      if (selectedAnswer.correct) {\n        if (questionNumber === questions.length) {\n          // Last question answered correctly\n          setExplanation({\n            message: \"ðŸŽ‰ GlÃ¼ckwunsch!!! Du hast die Millionen Gewonnen!!! ðŸŽ‰ðŸ’°ðŸ’°ðŸ’°\",\n            detail: \"Vielen Dank fÃ¼rs Spielen!\"\n          });\n          setShowExplanationModal(true);\n          handleBecomeMillionaire(); // Optional: Sets isMillionaire to true\n        } else {\n          // Correct answer for other questions\n          setExplanation({\n            message: \"ðŸŽ‰ Korrekt!\",\n            detail: question.explanation\n          });\n          setShowExplanationModal(true);\n        }\n      } else {\n        // Incorrect answer\n        setExplanation({\n          message: \"Das war falsch:\",\n          detail: question.explanation\n        });\n        setShowExplanationModal(true);\n        setTimeOut(true); // Add this back to end the game on wrong answer\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quiz-content\",\n    children: !quizStarted ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"start-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Quiz gegen Hass\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spacer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"start-button\",\n        onClick: () => setQuizStarted(true),\n        children: \"Quiz starten\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question\",\n        children: question === null || question === void 0 ? void 0 : question.question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `answers ${answersLocked ? \"answers-locked\" : \"\"}`,\n        children: question === null || question === void 0 ? void 0 : question.answers.map((item, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `${answersLocked ? item === selectedAnswer ? item.correct ? \"answer correct\" : \"answer incorrect\" : \"answer\" : selectedAnswer === item ? \"answer active\" : \"answer\"}`,\n          onClick: () => !answersLocked && handleClick(item),\n          children: item.text\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"lock-in-button\",\n        onClick: handleLockIn,\n        disabled: !selectedAnswer,\n        children: \"Antwort einloggen\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n_s(Quiz, \"ta9wYg1hgZIYLhFY03V/gSzY1nE=\");\n_c = Quiz;\nexport default Quiz;\nvar _c;\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","Quiz","questions","questionNumber","setQuestionNumber","setTimeOut","handleBecomeMillionaire","quizStarted","setQuizStarted","setShowExplanationModal","setExplanation","answersLocked","setAnswersLocked","_s","question","setQuestion","selectedAnswer","setSelectedAnswer","handleClick","item","console","log","handleLockIn","alert","correct","length","message","detail","explanation","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","answers","map","index","text","disabled","_c","$RefreshReg$"],"sources":["C:/_Code/fjmk/reactquiz/react-quiz-hatespeech-milionaire-theme/src/components/Quiz.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nconst Quiz = ({\r\n  questions,\r\n  questionNumber,\r\n  setQuestionNumber,\r\n  setTimeOut,\r\n  handleBecomeMillionaire,\r\n  quizStarted,\r\n  setQuizStarted,\r\n  setShowExplanationModal, // Bestehende Prop\r\n  setExplanation, // Neue Prop\r\n  answersLocked, // Receive from props\r\n  setAnswersLocked, // Receive from props\r\n}) => {\r\n  const [question, setQuestion] = useState(null);\r\n  const [selectedAnswer, setSelectedAnswer] = useState(null);\r\n\r\n  // Update the current question when the question number changes\r\n  useEffect(() => {\r\n    setQuestion(questions[questionNumber - 1]);\r\n    setSelectedAnswer(null); // Reset selected answer when question changes\r\n  }, [questions, questionNumber]);\r\n\r\n\r\n  // Call handleBecomeMillionaire function when becoming a millionaire\r\n  useEffect(() => {\r\n    if (questionNumber > 15) {\r\n      handleBecomeMillionaire();\r\n    }\r\n  }, [questionNumber, handleBecomeMillionaire]);\r\n\r\n  // Handles the click for answers\r\n  const handleClick = (item) => {\r\n    if (!answersLocked) {\r\n      setSelectedAnswer(item);\r\n    } else {\r\n      console.log(\"Answers are locked!\");\r\n    }\r\n  };\r\n\r\n  // Handles the \"Lock In Answer\" button click\r\n  const handleLockIn = () => {\r\n    if (!selectedAnswer) {\r\n      alert(\"Sie kÃ¶nnen keine Antwort sperren, wenn sie nicht ausgewÃ¤hlt ist!\");\r\n      return;\r\n    }\r\n\r\n    if (!answersLocked) {\r\n      setAnswersLocked(true); // Use the setter from props\r\n\r\n      if (selectedAnswer.correct) {\r\n        if (questionNumber === questions.length) {\r\n          // Last question answered correctly\r\n          setExplanation({\r\n            message: \"ðŸŽ‰ GlÃ¼ckwunsch!!! Du hast die Millionen Gewonnen!!! ðŸŽ‰ðŸ’°ðŸ’°ðŸ’°\",\r\n            detail: \"Vielen Dank fÃ¼rs Spielen!\",\r\n          });\r\n          setShowExplanationModal(true);\r\n          handleBecomeMillionaire(); // Optional: Sets isMillionaire to true\r\n        } else {\r\n          // Correct answer for other questions\r\n          setExplanation({ message: \"ðŸŽ‰ Korrekt!\", detail: question.explanation });\r\n          setShowExplanationModal(true);\r\n        }\r\n      } else {\r\n        // Incorrect answer\r\n        setExplanation({ message: \"Das war falsch:\", detail: question.explanation });\r\n        setShowExplanationModal(true);\r\n        setTimeOut(true); // Add this back to end the game on wrong answer\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"quiz-content\">\r\n      {!quizStarted ? (\r\n        <div className=\"start-container\">\r\n          <h1>Quiz gegen Hass</h1>\r\n\r\n          <div className=\"spacer\"></div>\r\n          <button className=\"start-button\" onClick={() => setQuizStarted(true)}>\r\n            Quiz starten\r\n          </button>\r\n        </div>\r\n      ) : (\r\n        <>\r\n          <div className=\"question\">{question?.question}</div>\r\n          <div className={`answers ${answersLocked ? \"answers-locked\" : \"\"}`}>\r\n            {question?.answers.map((item, index) => (\r\n              <button\r\n                key={index}\r\n                className={`${\r\n                  answersLocked\r\n                    ? item === selectedAnswer\r\n                      ? item.correct\r\n                        ? \"answer correct\"\r\n                        : \"answer incorrect\"\r\n                      : \"answer\"\r\n                    : selectedAnswer === item\r\n                    ? \"answer active\"\r\n                    : \"answer\"\r\n                }`}\r\n                onClick={() => !answersLocked && handleClick(item)}\r\n              >\r\n                {item.text}\r\n              </button>\r\n            ))}\r\n          </div>\r\n          <button className=\"lock-in-button\" onClick={handleLockIn} disabled={!selectedAnswer}>\r\n            Antwort einloggen\r\n          </button>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Quiz;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}